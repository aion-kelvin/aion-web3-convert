var Web3 = require('../../packages/web3');
let web3 = new Web3(new Web3.providers.HttpProvider("http://127.0.0.1:8545"));

var abi = [{"constant":false,"inputs":[{"name":"_stamp","type":"string"},{"name":"_addr","type":"address"},{"name":"_userPrivilege","type":"bytes1"}],"name":"addUser","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"_stamp","type":"string"}],"name":"getUserAddress","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getOwner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_stamp","type":"string"},{"name":"_addr","type":"address"}],"name":"addAddress","outputs":[],"payable":false,"type":"function"},{"inputs":[],"payable":false,"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_stamp","type":"string"}],"name":"UserAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_addr","type":"address"}],"name":"AddressAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_owner","type":"address"}],"name":"GotOwner","type":"event"}];

var data = '605060405234156100105760006000fd5b5b3360006000508282909180600101839055555050505b61002c565b6106298061003b6000396000f30060506040526000356c01000000000000000000000000900463ffffffff1680630fd5f53f1461005f5780634985e85c146100ed578063893d20e81461016a5780638da5cb5b1461019b578063ceb35b0f146101cc57610059565b60006000fd5b341561006b5760006000fd5b6100eb6004808035906010019082018035906010019191908080600f01601080910402601001604051908101604052809392919081815260100183838082843782019150505050505090909190808060100135903590916020019091929080356effffffffffffffffffffffffffffff191690601001909190505061023f565b005b34156100f95760006000fd5b61014d6004808035906010019082018035906010019191908080600f0160108091040260100160405190810160405280939291908181526010018383808284378201915050505050509090919050506103eb565b604051808383825281601001526020019250505060405180910390f35b34156101765760006000fd5b61017e610493565b604051808383825281601001526020019250505060405180910390f35b34156101a75760006000fd5b6101af6104f9565b604051808383825281601001526020019250505060405180910390f35b34156101d85760006000fd5b61023d6004808035906010019082018035906010019191908080600f0160108091040260100160405190810160405280939291908181526010018383808284378201915050505050509090919080806010013590359091602001909192905050610508565b005b6000600050806001015490543390911491901416151561025f5760006000fd5b828260026000506000876040518082805190601001908083835b60108310151561029f57805182525b601082019150601081019050601083039250610279565b6001836010036101000a03801982511681845116808217855250505050505090500191505060405180910390209060001916909060001916908252816010015260200190815260100160002090506000508282909180600101839055555050508060036000506000858582528160100152602001908152601001600020905060006101000a81548160ff02191690836f01000000000000000000000000000000900402179055507fdb8f9fd4bfba5ae615ae02e8b4d281b887225fd3d34a5ac7b8d78df768bb63e7856040518080601001828103825283818151815260100191508051906010019080838360005b838110156103a95780820151818401525b60108101905061038d565b50505050905090810190600f1680156103d65780820380516001836010036101000a031916815260100191505b509250505060405180910390a15b5b50505050565b6000600060026000506000846040518082805190601001908083835b60108310151561042d57805182525b601082019150601081019050601083039250610407565b6001836010036101000a0380198251168184511680821785525050505050509050019150506040518091039020906000191690906000191690825281601001526020019081526010016000209050600050806001015490549150915061048e565b915091565b600060007f77639a42ca9794bf1eab5dca256c6008de7b84dd4ea209463880c7fd98671a25600060005080600101549054604051808383825281601001526020019250505060405180910390a1600060005080600101549054915091506104f5565b9091565b60006000508060010154905482565b600060005080600101549054339091149190141615156105285760006000fd5b818160026000506000866040518082805190601001908083835b60108310151561056857805182525b601082019150601081019050601083039250610542565b6001836010036101000a038019825116818451168082178552505050505050905001915050604051809103902090600019169090600019169082528160100152602001908152601001600020905060005082829091806001018390555550505081817fa226db3f664042183ee0281230bba26cbf7b5057e50aee7f25a175ff45ce4d7f60405160405180910390a25b5b5050505600a165627a7a72305820cd5bc01804ecd2664c5e73f2403a4189d1e8cb1d38bf78c2c7c705e1ef837c030029';


web3.eth.personal.unlockAccount(
	"0xa0450c4333e72ed26552d7462c0b3669924eec816a219b3960d5b3f0b33f7444", 
	"pw-goes-here", 
	600);
let address = '0xa0450c4333e72ed26552d7462c0b3669924eec816a219b3960d5b3f0b33f7444';
let opts = {
    from: address,
    gas: 4000000,
    gasPrice: 10000000000,
    data: data
};

let ctAbi = new web3.eth.Contract(abi, opts);
let ctorArgs = [];


ctAbi.deploy({data: data, arguments: ctorArgs})
    .send()
    .on('error', err => { console.log('send error event' , err) })
    .on('transactionHash', transactionHash => { console.log('transactionHash', transactionHash) })
    .on('receipt', receipt => { console.log('receipt', receipt) })
    .on('confirmation', (confirmationNumber, receipt) => { console.log(confirmationNumber, receipt) })
    .then(newContractInstance => {
		console.log(newContractInstance.options.address) 
    })
.catch(err => { console.log('send error catch', err) })


